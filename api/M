<?php
// Include the Composer autoload file
require_once '../vendor/autoload.php'; // Adjust the path as necessary

// Include your database configuration
include '../api/db_config.php'; 

// Get parameters from the URL
$documentType = isset($_GET['documentType']) ? $_GET['documentType'] : 'default';
$sortBy = isset($_GET['sortBy']) ? $_GET['sortBy'] : '';
$fromBatch = isset($_GET['fromBatch']) ? $_GET['fromBatch'] : '';
$toBatch = isset($_GET['toBatch']) ? $_GET['toBatch'] : '';
$outputFormat = isset($_GET['outputFormat']) ? $_GET['outputFormat'] : 'pdf';

// Fetch records from the database based on the selected options
$query = "SELECT * FROM records"; // Adjust your table name
if ($sortBy === 'customerBatchRange') {
    $query .= " WHERE batch BETWEEN '$fromBatch' AND '$toBatch'";
}

$result = $conn->query($query);
if (!$result) {
    die("Database query failed: " . $conn->error);
}

if ($outputFormat === 'pdf') {
    // PDF Generation Logic
    if ($documentType === 'masterlists') {
        // Create new PDF document in landscape format for Masterlists
        $pdf = new \TCPDF('L', 'mm', 'A4', true, 'UTF-8', false);
        $pdf->SetCreator(PDF_CREATOR);
        $pdf->SetAuthor('SMDI');
        $pdf->SetTitle('Masterlists');
    
        // Set header and footer fonts
        $pdf->setHeaderFont(['helvetica', '', 10]);
        $pdf->setFooterFont(['helvetica', '', 8]);
        $pdf->SetMargins(8, 8, 8);
        $pdf->SetAutoPageBreak(TRUE, 10);
        $pdf->AddPage(); // Add a new page in landscape format
    
        // Prepare the HTML content for Masterlists
        $html = '
    <div style="text-align: center; margin-bottom: 30px;">
        <img src="img/smdi_logo.jpg" alt="SMDI_Logo" style="max-width: 150px; margin-bottom: 10px;"/>
        <h4 style="font-size: 24px; margin: 0; padding: 0; line-height: 1;">Solid Motorcycle Distributors, Inc.</h4>
        <h2 style="font-size: 15px; font-weight: bold; margin: 0; padding: 0; line-height: 0.5;">Masterlists</h2>
    </div>
        <table style="width: 100%; border-collapse: collapse; margin: 20px 0; border: 1px solid #ddd;">
            <thead>
                <tr>
                    <th style="width: 20%; font-size: 10px; background-color: #f5f5f5; font-weight: bold; color: #333; text-align: center; border: 1px solid #ccc;">Family Name</th>
                    <th style="width: 15%; font-size: 10px; background-color: #f5f5f5; font-weight: bold; color: #333; text-align: center; border: 1px solid #ccc;">First Name</th>
                    <th style="width: 3%; font-size: 10px; background-color: #f5f5f5; font-weight: bold; color: #333; text-align: center; border: 1px solid #ccc;">M.I.</th>
                    <th style="width: 15%; font-size: 10px; background-color: #f5f5f5; font-weight: bold; color: #333; text-align: center; border: 1px solid #ccc;">Plate Number</th>
                    <th style="width: 15%; font-size: 10px; background-color: #f5f5f5; font-weight: bold; color: #333; text-align: center; border: 1px solid #ccc;">MV File</th>
                    <th style="width: 10%; font-size: 10px; background-color: #f5f5f5; font-weight: bold; color: #333; text-align: center; border: 1px solid #ccc;">Branch</th>
                    <th style="width: 5%; font-size: 10px; background-color: #f5f5f5; font-weight: bold; color: #333; text-align: center; border: 1px solid #ccc;">Batch</th>
                    <th style="width: 18%; font-size: 10px; background-color: #f5f5f5; font-weight: bold; color: #333; text-align: center; border: 1px solid #ccc;">Remarks</th>
                </tr>
            </thead>
            <tbody>';
        
        while ($row = $result->fetch_assoc()) {
            $familyName = isset($row['family_name']) ? htmlspecialchars($row['family_name']) : '';
            $firstName = isset($row['first_name']) ? htmlspecialchars($row['first_name']) : '';
            $middleName = isset($row['middle_name']) ? htmlspecialchars($row['middle_name']) : '';
            $plateNumber = isset($row['plate_number']) ? htmlspecialchars($row['plate_number']) : '';
            $mvFile = isset($row['mv_file']) ? htmlspecialchars($row['mv_file']) : '';
            $branch = isset($row['branch']) ? htmlspecialchars($row['branch']) : '';
            $batch = isset($row['batch']) ? htmlspecialchars($row['batch']) : '';
            $remarks = isset($row['remarks']) ? htmlspecialchars($row['remarks']) : '';
        
            $html .= '<tr>
                <td style="width: 20% font-size: 12px; border-bottom: 1px solid #e0e0e0; border: 1px solid #ccc;">' . $familyName . '</td>
                <td style="width: 15% font-size: 12px; border-bottom: 1px solid #e0e0e0; border: 1px solid #ccc;">' . $firstName . '</td>
                <td style="width: 3% font-size: 12px; border-bottom: 1px solid #e0e0e0; border: 1px solid #ccc;">' . $middleName . '</td>
                <td style="width: 15% font-size: 12px; border-bottom: 1px solid #e0e0e0; border: 1px solid #ccc;">' . $plateNumber . '</td>
                <td style="width: 15% font-size: 12px; border-bottom: 1px solid #e0e0e0; border: 1px solid #ccc;">' . $mvFile . '</td>
                <td style="width: 10% font-size: 12px; border-bottom: 1px solid #e0e0e0; border: 1px solid #ccc;">' . $branch . '</td>
                <td style="width: 5% font-size: 12px; border-bottom: 1px solid #e0e0e0; border: 1px solid #ccc;">' . $batch . '</td>
                <td style="width: 18% font-size: 12px; border-bottom: 1px solid #e0e0e0; border: 1px solid #ccc;">' . $remarks . '</td>
            </tr>';
        }
        $html .= '</tbody></table>';
        
        $pdf->writeHTML($html, true, false, true, false, '');
        $pdf->Output('masterlists.pdf', 'I');
    } 
    
    if ($documentType === 'labels') {
        $pdf = new \TCPDF('P', 'mm', 'A4', true, 'UTF-8', false);
        $pdf->SetCreator(PDF_CREATOR);
        $pdf->SetAuthor('SMDI');
        $pdf->SetTitle('Labels');
    
        // Set header and footer fonts
        $pdf->setHeaderFont(['helvetica', '', 10]);
        $pdf->setFooterFont(['helvetica', '', 8]);
        $pdf->SetMargins(8, 8, 8);
        $pdf->SetAutoPageBreak(TRUE, 10);
        $pdf->AddPage(); // Add a new page in portrait format
    
        // Prepare the HTML content for Labels
        $html = ''; // Start with an empty string for labels
        while ($row = $result->fetch_assoc()) {
            $familyName = isset($row['family_name']) ? htmlspecialchars($row['family_name']) : '';
            $firstName = isset($row['first_name']) ? htmlspecialchars($row['first_name']) : '';
            $middleName = isset($row['middle_name']) ? htmlspecialchars($row['middle_name']) : '';
            $branch = isset($row['branch']) ? htmlspecialchars($row['branch']) : '';
    
            $html .= '
            <div style="
                font-size: 14px; /* Font size */
                text-align: left; 
                padding: 2px; /* Padding */
                border: 1px solid #000; 
                border-radius: 0; /* No border radius */
                display: inline-block; 
                width: 50%; 
                margin: auto; 
                margin-bottom: 10px; /* Bottom margin */
                height: 30px; /* Fixed height */
                overflow: hidden; /* Hide overflow */
                line-height: 0.78; /* Line height */
            ">
                <p style="margin: 0;">
                    <span style="font-weight: bold;"> ' . $familyName . ', ' . $firstName . ' ' . $middleName . '</span>
                    <span style="color: red; font-weight: normal;">Branch:</span> 
                    <span style="font-weight: bold;">' . $branch . '</span>
                </p>
            </div>';
        }
        
         $pdf->writeHTML($html, true, false, true, false, '');
        $pdf->Output('labels.pdf', 'I');
    }
} elseif ($outputFormat === 'excel') {
    // Excel Generation Logic
    $spreadsheet = new \PhpOffice\PhpSpreadsheet\Spreadsheet();
    $sheet = $spreadsheet->getActiveSheet();
    
    // Set header
    $sheet->setCellValue('A1', 'Family Name');
    $sheet->setCellValue('B1', 'First Name');
    $sheet->setCellValue('C1', 'Middle Name');
    $sheet->setCellValue('D1', 'Plate Number');
    $sheet->setCellValue('E1', 'MV File');
    $sheet->setCellValue('F1', 'Branch');
    $sheet->setCellValue('G1', 'Batch');
    $sheet->setCellValue('H1', 'Remarks');

    // Add data to the Excel sheet
    $row = 2; // Start from the second row
    while ($data = $result->fetch_assoc()) {
        $sheet->setCellValue('A' . $row, $data['family_name']);
        $sheet->setCellValue('B' . $row, $data['first_name']);
        $sheet->setCellValue('C' . $row, $data['middle_name']);
        $sheet->setCellValue('D' . $row, $data['plate_number']);
        $sheet->setCellValue('E' . $row, $data['mv_file']);
        $sheet->setCellValue('F' . $row, $data['branch']);
        $sheet->setCellValue('G' . $row, $data['batch']);
        $sheet->setCellValue('H' . $row, $data['remarks']);
        $row++;
    }

    // Save and output the Excel file
    $writer = new \PhpOffice\PhpSpreadsheet\Writer\Xlsx($spreadsheet);
    $fileName = ($documentType === 'masterlists') ? 'masterlists.xlsx' : 'labels.xlsx';
    header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
    header('Content-Disposition: attachment; filename="' . $fileName . '"');
    $writer->save('php://output');
}
?>